{"version":3,"sources":["js/weather.js"],"names":["API_KEY","cloudW","clearW","thunderW","dirzzleW","rainW","snowW","atmosphereW","defaultW","onGeoOk","position","lat","coords","latitude","lng","longitude","url","fetch","then","response","json","data","nowWeather","weather","main","document","querySelector","tmp","city","innerHTML","console","log","temp","name","onGeoError","alert","navigator","geolocation","getCurrentPosition"],"mappings":"AAAA,IAAMA,OAAO,GAAG,kCAAkC;AAElD,IAAMC,MAAM,+CAA6C;AACzD,IAAMC,MAAM,+CAA6C;AACzD,IAAMC,QAAQ,8CAA4C;AAC1D,IAAMC,QAAQ,+CAA6C;AAC3D,IAAMC,KAAK,kDAAgD;AAC3D,IAAMC,KAAK,oDAAkD;AAC7D,IAAMC,WAAW,8CAA4C;AAC7D,IAAMC,QAAQ,+CAA6C;AAE3D,SAASC,OAAO,CAACC,QAAQ,EAAE;EACzB,IAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAM,CAACC,QAAQ;EACpC,IAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAM,CAACG,SAAS;EAErC,IAAMC,GAAG,iEAA0DL,GAAG,kBAAQG,GAAG,oBAAUd,OAAO,kBAAe;EACjHiB,KAAK,CAACD,GAAG,CAAC,CACPE,IAAI,CAAC,UAACC,QAAQ;IAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE;EAAA,EAAC,CACnCF,IAAI,CAAC,UAACG,IAAI,EAAK;IACd,IAAMC,UAAU,GAAGD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;IACvC,IAAMD,OAAO,GAAGE,QAAQ,CAACC,aAAa,CAAC,2BAA2B,CAAC;IACnE,IAAMC,GAAG,GAAGF,QAAQ,CAACC,aAAa,CAAC,4BAA4B,CAAC;IAChE,IAAME,IAAI,GAAGH,QAAQ,CAACC,aAAa,CAAC,0BAA0B,CAAC;IAC/D,IAAIJ,UAAU,KAAK,QAAQ,EAAE;MAC3BC,OAAO,CAACM,SAAS,GAAG5B,MAAM;IAC5B,CAAC,MAAM,IAAIqB,UAAU,KAAK,OAAO,EAAE;MACjCC,OAAO,CAACM,SAAS,GAAG3B,MAAM;IAC5B,CAAC,MAAM,IAAIoB,UAAU,KAAK,cAAc,EAAE;MACxCC,OAAO,CAACM,SAAS,GAAG1B,QAAQ;IAC9B,CAAC,MAAM,IAAImB,UAAU,KAAK,SAAS,EAAE;MACnCC,OAAO,CAACM,SAAS,GAAGzB,QAAQ;IAC9B,CAAC,MAAM,IAAIkB,UAAU,KAAK,MAAM,EAAE;MAChCC,OAAO,CAACM,SAAS,GAAGxB,KAAK;IAC3B,CAAC,MAAM,IAAIiB,UAAU,KAAK,MAAM,EAAE;MAChCC,OAAO,CAACM,SAAS,GAAGvB,KAAK;IAC3B,CAAC,MAAM,IAAIgB,UAAU,KAAK,YAAY,EAAE;MACtCC,OAAO,CAACM,SAAS,GAAGtB,WAAW;IACjC,CAAC,MAAM;MACLgB,OAAO,CAACM,SAAS,GAAGrB,QAAQ;IAC9B;IACAsB,OAAO,CAACC,GAAG,CAACT,UAAU,CAAC;IACvBK,GAAG,CAACE,SAAS,aAAMR,IAAI,CAACG,IAAI,CAACQ,IAAI,UAAI;IACrCJ,IAAI,CAACC,SAAS,gBAASR,IAAI,CAACY,IAAI,CAAE;EACpC,CAAC,CAAC;AACN;AACA,SAASC,UAAU,GAAG;EACpBC,KAAK,CAAC,qCAAqC,CAAC;AAC9C;AAEAC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC7B,OAAO,EAAEyB,UAAU,CAAC","file":"weather.2dcc02e5.js","sourceRoot":"..","sourcesContent":["const API_KEY = \"93e3b1828e8e9d26579d1dee33d08b75\";\r\n\r\nconst cloudW = `<i class=\"fa-solid fa-cloud fa-2xl\"></i>`;\r\nconst clearW = `<i class=\"fa-regular fa-sun fa-2xl\"></i>`;\r\nconst thunderW = `<i class=\"fa-solid fa-bolt fa-2xl\"></i>`;\r\nconst dirzzleW = `<i class=\"fa-solid fa-water fa-2xl\"></i>`;\r\nconst rainW = `<i class=\"fa-solid fa-umbrella fa-2xl\"></i>`;\r\nconst snowW = `<i class=\"fa-solid fa-snowflakes fa-2xl\"></i>`;\r\nconst atmosphereW = `<i class=\"fa-solid fa-wind fa-2xl\"></i>`;\r\nconst defaultW = ` <i class=\"fa-solid fa-wind fa-2xl\"></i>`;\r\n\r\nfunction onGeoOk(position) {\r\n  const lat = position.coords.latitude;\r\n  const lng = position.coords.longitude;\r\n\r\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${API_KEY}&units=metric`;\r\n  fetch(url)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const nowWeather = data.weather[0].main;\r\n      const weather = document.querySelector(\".weather span:first-child\");\r\n      const tmp = document.querySelector(\".weather span:nth-child(2)\");\r\n      const city = document.querySelector(\".weather span:last-child\");\r\n      if (nowWeather === \"Clouds\") {\r\n        weather.innerHTML = cloudW;\r\n      } else if (nowWeather === \"Clear\") {\r\n        weather.innerHTML = clearW;\r\n      } else if (nowWeather === \"Thunderstorm\") {\r\n        weather.innerHTML = thunderW;\r\n      } else if (nowWeather === \"Drizzle\") {\r\n        weather.innerHTML = dirzzleW;\r\n      } else if (nowWeather === \"Rain\") {\r\n        weather.innerHTML = rainW;\r\n      } else if (nowWeather === \"Snow\") {\r\n        weather.innerHTML = snowW;\r\n      } else if (nowWeather === \"Atmosphere\") {\r\n        weather.innerHTML = atmosphereW;\r\n      } else {\r\n        weather.innerHTML = defaultW;\r\n      }\r\n      console.log(nowWeather);\r\n      tmp.innerHTML = `${data.main.temp}Â°C`;\r\n      city.innerHTML = `In ${data.name}`;\r\n    });\r\n}\r\nfunction onGeoError() {\r\n  alert(\"can't find you. No weather for you.\");\r\n}\r\n\r\nnavigator.geolocation.getCurrentPosition(onGeoOk, onGeoError);\r\n"]}